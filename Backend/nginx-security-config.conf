server {
    server_name api.strikecolor1.com;

    location / {
        proxy_pass http://localhost:8000;  # or whatever port your backend runs on
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # ðŸ”’ SECURITY: Preserve all security headers from backend
        proxy_hide_header X-Powered-By;
        proxy_pass_header X-Frame-Options;
        proxy_pass_header X-Content-Type-Options;
        proxy_pass_header Content-Security-Policy;
        proxy_pass_header Referrer-Policy;
        proxy_pass_header Permissions-Policy;
        proxy_pass_header Strict-Transport-Security;
        proxy_pass_header X-XSS-Protection;
        proxy_pass_header X-Permitted-Cross-Domain-Policies;
        proxy_pass_header Cross-Origin-Opener-Policy;
        proxy_pass_header Cross-Origin-Embedder-Policy;
        
        # Additional security headers
        proxy_pass_header X-Download-Options;
        proxy_pass_header X-DNS-Prefetch-Control;
        proxy_pass_header X-Requested-With;
        
        # WebSocket support
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 86400;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/api.strikecolor1.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/api.strikecolor1.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = api.strikecolor1.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name api.strikecolor1.com;
    return 404; # managed by Certbot
} 