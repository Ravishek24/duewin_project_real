Authentication
This is a method that consists in requesting an authentication for a player who is trying to launch the game
Path: /auth
Request Method: POST
Content-Type: application/json; charset=utf-8
Headers: X-Spribe-Client-ID, X-Spribe-Client-TS, X-Spribe-Client-Signature
Request
Parameters
Sample
Parameter	Type	Description
user_token	string	Token generated by operator during game launch process
session_token	string	Token generated by provider for current game session
platform	string [platform enum]	Enum: mobiledesktop
currency	string [currency enum]	Game currency. (currency code)
Response
Parameters
Success sample
Error sample
Parameter	Type	Description
code	integer [enum]	Response code
message	string	Response any logical message
data	object	only needed when code 200
user_id	string	ID of player on operator side
username	string	Name of player
balance	long	Current balance of player in specified currency.
currency	string [currency enum]	Currency of player
Important!
Each request sent to the API requires validation using specific security headers. For details on implementing this, refer to Securing API Requests.

Amount/Balance example
Amount/Balance fiat is represented in units(1$ = 1000 unit) and always is an integer value. For example: with 5.32 USD and the value will be 5.32 * 10^3 = 5320

Amount/Balance crypto is represented in units(1BTC = 100000000 unit) and always is an integer value. For example: with 0.0532 BTC and the value will be 0.0532 * 10^8 = 5320000

Possible codes
200 - Success
401 - User token is invalid
403 - User token is expired
413 - Invalid Client-Signature
500 - Internal error
If code is 200 - operator should always return parameter data with information; HTTP status code should always be 200



Player information
This method retrieves player information
Path: /info
Request Method: POST
Content-Type: application/json; charset=utf-8
Headers: X-Spribe-Client-ID, X-Spribe-Client-TS, X-Spribe-Client-Signature
Request
Parameters
Sample
Parameter	Type	Description
user_id	string	Player ID on operator side
session_token	string	Token generated by provider for current game session
currency	string [currency enum]	Game currency. (currency code)
Response
Parameters
Success sample
Error sample
Parameter	Type	Description
code	integer [enum]	Response code
message	string	Response any logical message
data	object	only needed when code 200
user_id	string	ID of player on operator side
username	string	Name of player
balance	long	Current balance of player in specified currency.
currency	string [currency enum]	Currency of player
Important!
Each request sent to the API requires validation using specific security headers. For details on implementing this, refer to Securing API Requests.

Possible codes
200 - Success
401 - User token is invalid
403 - User token is expired
413 - Invalid Client-Signature
500 - Internal error
If code is 200 - operator should always return parameter data with information; HTTP status code should always be 200


Withdraw
This method withdraws money from player balance. Method sends one transaction and returns transaction ID, player balance and status of transaction.
Path: /withdraw
Request Method: POST
Content-Type: application/json; charset=utf-8
Headers: X-Spribe-Client-ID, X-Spribe-Client-TS, X-Spribe-Client-Signature
Request
Parameters
Sample
Parameter	Type	Description
user_id	string	Player ID on operator side
currency	string [currency enum]	Bet currency (currency code)
amount	long	Amount that should be transferred from players balance
provider	string	Game provider
provider_tx_id	string	The transaction ID assigned by provider
game	string [game enum]	Identifies specific game. (game identificator)
action	string [action enum]	Enum: betrain
action_id	string	ID of action in game, which depends on game and “action”
session_token	string	Game session token
platform	string [platform enum]	Enum: mobiledesktop
Response
Parameters
Success sample
Duplication sample
Error sample
Parameter	Type	Description
code	integer [enum]	Response code
message	string	Response any logical message
data	object	only needed when code 200 or 409
user_id	string	ID of a player on the operators side
operator_tx_id	string	Unique transaction ID on side of operator
provider	string	Game provider
provider_tx_id	string	The transaction ID received by provider
old_balance	long	Balance before deposit
new_balance	long	Balance after deposit
currency	string [currency enum]	Transaction currency
Important!
Each request sent to the API requires validation using specific security headers. For details on implementing this, refer to Securing API Requests.

If request is timed out, game sends same transaction, with same ​ provider_tx_id again. if transaction is already processed on the side of the operator, operator identifies duplication and adds in answer duplication error code with already processed information of transaction. The Transaction should be unique with ​ provider_tx_id​.

If operator processed transaction successfully, but after this, provider can't process it in the game, provider will rollback transaction with rollback method.

Amount/Balance example
Amount/Balance fiat is represented in units(1$ = 1000 unit) and always is an integer value. For example: with 5.32 USD and the value will be 5.32 * 10^3 = 5320

Amount/Balance crypto is represented in units(1BTC = 100000000 unit) and always is an integer value. For example: with 0.0532 BTC and the value will be 0.0532 * 10^8 = 5320000

Possible codes
200 - Success
401 - User token is invalid
402 - Insufficient fund
403 - User token is expired
405 - Internal error with no retry
409 - Duplicate transaction
412 - For stop the game and show the reality check window. In the window will shown the message from the response. (read more)
413 - Invalid Client-Signature
500 - Internal error
If code is 200 - operator should always return parameter data with information; HTTP status code should always be 200


Deposit
This method makes a deposit into players account. The method sends transaction and returns transaction ID, player balance and status of transaction.
Path: /deposit
Request Method: POST
Content-Type: application/json; charset=utf-8
Headers: X-Spribe-Client-ID, X-Spribe-Client-TS, X-Spribe-Client-Signature
Request
Parameters
Sample
Parameter	Type	Description
user_id	string	Player ID
currency	string [currency enum]	Bet currency (currency code)
amount	long	Amount that should be transferred to players balance
provider	string	Game provider
provider_tx_id	string	The transaction ID assigned by provider
game	string [game enum]	Identifies specific game. (game identificator)
action	string	Type of action: betrainfreebetrainfreebetpromofreebetchallengefreebet
action_id	string	ID of action in game, which depends on game and “action”
session_token	string	Game session token
platform	string [platform enum]	Enum: mobiledesktop
withdraw_provider_tx_id optional	string	Provider id of withdrawn transaction, to which belongs current deposit transaction.
Response
Parameters
Success sample
Duplication sample
Error sample
Parameter	Type	Description
code	integer [enum]	Response code
message	string	Response any logical message
data	object	only needed when code 200 or 409
user_id	string	ID of a player on the operators side
operator_tx_id	string	Unique transaction ID on side of operator
provider	string	Game provider
provider_tx_id	string	The transaction ID received by provider
old_balance	long	Balance before deposit
new_balance	long	Balance after deposit
currency	string [currency enum]	Transaction currency
Important!
Each request sent to the API requires validation using specific security headers. For details on implementing this, refer to Securing API Requests.

If request gets on timeout, or an internal error, game sends same transaction, with same provider_tx_id again. If transaction is already processed on the side of the operator, operator identifies duplication and adds in answer duplication error code with processed information of transaction. The Transaction should be unique with ​ provider_tx_id​.

Amount/Balance example
Amount/Balance fiat is represented in units(1$ = 1000 unit) and always is an integer value. For example: with 5.32 USD and the value will be 5.32 * 10^3 = 5320

Amount/Balance crypto is represented in units(1BTC = 100000000 unit) and always is an integer value. For example: with 0.0532 BTC and the value will be 0.0532 * 10^8 = 5320000

Possible codes
200 - Success
401 - User token is invalid
403 - User token is expired
409 - Duplicate transaction
413 - Invalid Client-Signature
500 - Internal error
If code is 200 - operator should always return parameter data with information; HTTP status code should always be 200



Rollback
This method rollbacks transaction with provider transaction ID.
Path: /rollback
Request Method: POST
Content-Type: application/json; charset=utf-8
Headers: X-Spribe-Client-ID, X-Spribe-Client-TS, X-Spribe-Client-Signature
Request
Parameters
Sample
Parameter	Type	Description
user_id	string	Player ID
amount	long	Amount of money that should be rollbacked.
provider	string	Game provider
rollback_provider_tx_id	string	Provider transaction ID which should be rollbacked
provider_tx_id	string	The transaction ID assigned by provider
game	string [game enum]	Identifies specific game. (game identificator)
session_token	string	Game session token
action	string [action enum]	Enum: betrain
action_id	string	ID of action in game, which depends on game and “action”
Response
Parameters
Success sample
Duplication sample
Error sample
Parameter	Type	Description
code	integer [enum]	Response code
message	string	Response any logical message
data	object	only needed when code 200 or 409
user_id	string	ID of a player on the operators side
currency	string [currency enum]	Transaction currency
operator_tx_id	string	Transaction ID on side of operator
provider	string	Game provider
provider_tx_id	string	The transaction ID assigned by provider
old_balance	long	Balance before deposit
new_balance	long	Balance after deposit
Important!
Each request sent to the API requires validation using specific security headers. For details on implementing this, refer to Securing API Requests.

If request gets on timeout, or an internal error, game sends same transaction, with same provider_tx_id again. If transaction is already processed on the side of the operator, operator identifies duplication and adds in answer duplication error code with processed information of transaction. The Transaction should be unique with ​ provider_tx_id​.

Amount/Balance example
Amount/Balance fiat is represented in units(1$ = 1000 unit) and always is an integer value. For example: with 5.32 USD and the value will be 5.32 * 10^3 = 5320

Amount/Balance crypto is represented in units(1BTC = 100000000 unit) and always is an integer value. For example: with 0.0532 BTC and the value will be 0.0532 * 10^8 = 5320000

Possible codes
200 - Success
401 - User token is invalid
403 - User token is expired
408 - Transaction does not found
409 - Duplicate transaction
413 - Invalid Client-Signature
500 - Internal error
If code is 200 - operator should always return parameter data with information; HTTP status code should always be 200